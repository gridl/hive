usethis::use_directory("shiny")
library(leaflet)
install.packages("leaflet")
library(leaflet)
shiny::runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('R/example_leaflet.R')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
mtcars
library(tidyverse)
mtcars
as_tibble(mtcars)
as_tibble(mtcars) %>%
gather(variable, value)
as_tibble(mtcars) %>%
gather(variable, value) %>% View
as_tibble(mtcars) %>%
gather(variable, value) %>%
ggplot(aes(x=value, colour = variable)) +
geom_density()
as_tibble(mtcars) %>%
gather(variable, value) %>%
ggplot(aes(x=value, colour = variable)) +
geom_density() +
scale_x_log10()
as_tibble(mtcars)
as_tibble(mtcars) %>%
gather(x, y, mpg, cyl)
as_tibble(mtcars) %>%
gather(x, y, mpg, cyl, disp, hp, drat)
as_tibble(mtcars) %>%
gather(x, y)
as_tibble(mtcars) %>%
gather(x, y, -hp)
quakes
min(quakes)
runApp('shiny')
min(long)
min(quakes$long)
fitBounds(-44, 112, -11, 153)
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('R/example_leaflet.R')
runApp('shiny')
runApp('R/example_leaflet.R')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
httr::GET(https://biocache.ala.org.au/ws/occurrences/search?q=genus:Macropus)
httr::GET("https://biocache.ala.org.au/ws/occurrences/search?q=genus:Macropus")
httr::GET("https://biocache.ala.org.au/ws/occurrences/search?q=genus:Macropus") %>% content
library(httr)
httr::GET("https://biocache.ala.org.au/ws/occurrences/search?q=genus:Macropus") %>% content
httr::GET("https://biocache.ala.org.au/ws/occurrences/search?q=genus:Macropus") %>% content -> a
a$pageSize
a$startIndex
a$totalRecords
a$occurrences
a$status
a$dir
a$facetResults
shiny::runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
shiny::runApp('shiny')
library(ALA4R)
library(tidyverse)
library(lubridate)
as_tibble(ala_fields("occurrence_indexed"))
# cache to a permanent dir
ala_config(
cache_directory = "data_cache",
download_reason_id = 11, # "citizen science"
warn_on_empty = TRUE
)
env_layers <- c("Precipitation - annual","Temperature - annual max mean")
install.packages("ALA4R")
install.packages("ALA4R")
library(ALA4R)
library(tidyverse)
library(lubridate)
as_tibble(ala_fields("occurrence_indexed"))
# cache to a permanent dir
ala_config(
cache_directory = "data_cache",
download_reason_id = 11, # "citizen science"
warn_on_empty = TRUE
)
env_layers <- c("Precipitation - annual","Temperature - annual max mean")
# cache to a permanent dir
dir.create("data_cache")
ala_config(
cache_directory = "data_cache",
download_reason_id = 11, # "citizen science"
warn_on_empty = TRUE
)
env_layers <- c("Precipitation - annual","Temperature - annual max mean")
## 1. a specific species
# numbat
numbat <- as_tibble(search_fulltext("kookaburra")$data)
numbat
numbat <- as_tibble(search_fulltext("bee")$data)
numbat
machine_obs <- as_tibble(occurrences(
fq = c("basis_of_record:MachineObservation"),
qa = "none"
)$data) %>%
filter(rank %in% c("species", "subspecies"))
machine_obs
machine_obs %>%
count(scientificName)
machine_obs %>%
count(scientificName) %>%
arrange(desc(n))
machine_obs %>%
count(scientificName) %>%
arrange(desc(n)) %>%
filter(n==720)
machine_obs %>%
filter(scientificName == "Amegilla (Zonamegilla) pulchra")
machine_obs %>%
filter(scientificName == "Amegilla (Zonamegilla) pulchra") %>%
pull(year)
machine_obs %>%
filter(scientificName == "Amegilla (Zonamegilla) pulchra") %>%
pull(month)
machine_obs %>%
filter(scientificName == "Amegilla (Zonamegilla) pulchra") %>%
pull(collector)
machine_obs %>%
filter(scientificName == "Amegilla (Zonamegilla) pulchra") %>%
pull(catalogNumber)
machine_obs %>%
filter(scientificName == "Amegilla (Zonamegilla) pulchra") %>%
pull(kingdom)
machine_obs %>%
filter(scientificName == "Amegilla (Zonamegilla) pulchra") %>%
pull(phylum)
machine_obs %>%
filter(scientificName == "Amegilla (Zonamegilla) pulchra") %>%
pull(rank)
machine_obs %>%
filter(scientificName == "Amegilla (Zonamegilla) pulchra") %>%
pull(genus)
machine_obs %>%
filter(scientificName == "Amegilla (Zonamegilla) pulchra") %>%
pull(family)
machine_obs %>%
filter(scientificName == "Amegilla (Zonamegilla) pulchra") %>%
pull(subspecies)
machine_obs %>%
filter(scientificName == "Amegilla (Zonamegilla) pulchra") %>%
pull(collectionCode)
machine_obs %>%
filter(scientificName == "Amegilla (Zonamegilla) pulchra") %>%
pull(locationQuality)
machine_obs %>%
filter(scientificName == "Amegilla (Zonamegilla) pulchra") %>%
pull(taxonIdentificationIssue)
machine_obs %>%
filter(scientificName == "Amegilla (Zonamegilla) pulchra") %>%
pull(commonName)
machine_obs %>%
filter(scientificName == "Amegilla (Zonamegilla) pulchra") %>%
pull(kingdom)
machine_obs %>%
filter(scientificName == "Amegilla (Zonamegilla) pulchra") %>%
pull(class)
machine_obs %>%
filter(scientificName == "Amegilla (Zonamegilla) pulchra") %>%
pull(order)
machine_obs %>%
filter(scientificName == "Amegilla (Zonamegilla) pulchra") %>%
pull(family)
machine_obs <- as_tibble(occurrences(
fq = c("basis_of_record:MachineObservation","family:Apidae"),
qa = "none"
)$data) %>%
filter(rank %in% c("species", "subspecies"))
machine_bees <- as_tibble(occurrences(
fq = c("basis_of_record:MachineObservation","family:Apidae"),
qa = "none"
)$data) %>%
filter(rank %in% c("species", "subspecies"))
machine_bees
machine_bees %>%
count(scientificName) %>%
arrange(desc(n)) %>%
filter(n==720)
machine_bees %>%
count(scientificName) %>%
arrange(desc(n))
machine_bees <- as_tibble(occurrences(
fq = c("family:Apidae"),
qa = "none"
)$data) %>%
filter(rank %in% c("species", "subspecies"))
machine_bees <- as_tibble(occurrences(
fq = c("family:Apidae"),
qa = "none"
)$data)
machine_bees
machine_bees %>%
count(scientificName) %>%
arrange(desc(n))
machine_bees
machine_bees$catalogNumber
machine_bees$catalogNumber %>% count
machine_bees %>%
count(catalogNumber) %>%
arrange(desc(n))
machine_bees
machine_bees %>% collector
machine_bees %>%
count(collector) %>%
arrange(desc(n))
query_response <- occurrences(
fq = c("family:Apidae"),
qa = "none"
)
query_response$meta
query_response$meta %>% as_tibble
machine_obs %>%
filter(scientificName == "Amegilla (Zonamegilla) pulchra")
machine_bees %>%
group_by(species) %>%
count()
machine_bees %>%
count(genus)
leaflet(machine_bees) %>%
addTiles() %>%
addCircleMarkers(lng = ~ longitude, lat = ~ latitude)
library(leaflet)
leaflet(machine_bees) %>%
addTiles() %>%
addCircleMarkers(lng = ~ longitude, lat = ~ latitude)
leaflet(machine_bees) %>%
addTiles() %>%
addCircleMarkers(lng = ~ longitude, lat = ~ latitude, color = ~genus)
leaflet(machine_bees) %>%
addTiles() %>%
addCircleMarkers(lng = ~ longitude, lat = ~ latitude, color = ~factor(genus))
leaflet(machine_bees) %>%
addTiles() %>%
addCircleMarkers(lng = ~ longitude, lat = ~ latitude, fill = ~factor(genus))
?addCircleMarkers
machine_bees %>% count(genus)
leaflet(machine_bees) %>%
addTiles() %>%
addCircleMarkers(lng = ~ longitude, lat = ~ latitude, fill = ~as.numeric(factor(genus)))
leaflet(machine_bees) %>%
addTiles() %>%
addCircleMarkers(lng = ~ longitude, lat = ~ latitude, fill = ~col2rgb(as.numeric(factor(genus))))
leaflet(machine_bees) %>%
addTiles() %>%
addCircleMarkers(lng = ~ longitude, lat = ~ latitude, fill = ~colorNumeric(as.numeric(factor(genus))))
colorNumeric
colorNumeripreviewColors(colorNumeric("Blues", domain = NULL), sort(rexp(16)))
c
previewColors(colorFactor("RdYlBu", domain = NULL), LETTERS[1:5])
colorFactor("RdYlBu", domain = NULL)
leaflet(machine_bees) %>%
addTiles() %>%
addCircleMarkers(lng = ~ longitude, lat = ~ colorFactor("RdYlBu", domain = NULL)(latitude))
leaflet(machine_bees) %>%
addTiles() %>%
addCircleMarkers(lng = ~ longitude, lat = ~ latitude, colour = colorFactor("RdYlBu", domain = NULL)(genus))
leaflet(machine_bees) %>%
addTiles() %>%
addCircleMarkers(lng = ~ longitude, lat = ~ latitude, colour = ~ colorFactor("RdYlBu", domain = NULL)(genus))
leaflet(machine_bees) %>%
addTiles() %>%
addCircleMarkers(lng = ~ longitude, lat = ~ latitude, colour = ~ colorFactor("RdYlBu", domain = genus)(genus))
colorFactor("RdYlBu", domain = NULL)(machine_bees$genus)
colorFactor("RdYlBu", domain = NULL)(unique(machine_bees$genus))
leaflet(machine_bees) %>%
addTiles() %>%
addCircleMarkers(lng = ~ longitude, lat = ~ latitude, colour = ~ colorFactor("RdYlBu", domain = NULL)(machine_bees$genus))
leaflet(machine_bees) %>%
addTiles() %>%
addCircleMarkers(lng = ~ longitude, lat = ~ latitude, colour = ~ colorFactor("RdYlBu", domain = machine_bees$genus)(genus))
leaflet(machine_bees) %>%
addTiles() %>%
addCircleMarkers(lng = ~ longitude, lat = ~ latitude, color = ~ colorFactor("RdYlBu", domain = NULL)(genus))
machine_bees <- as_tibble(occurrences(
fq = c("family:Apidae"),
wkt = "POLYGON((112.27030754089 -10.661994277738,153.88651847839 -10.445985021005,154.06229972839 -44.27768127617,112.35819816589 -44.309136146459,112.35819816589 -10.748355247628,112.13847160339 -10.877850325879,112.27030754089 -10.661994277738))"
qa = "none"
)$data)
machine_bees <- as_tibble(occurrences(
fq = c("family:Apidae"),
wkt = "POLYGON((112.27030754089 -10.661994277738, 153.88651847839 -10.445985021005,154.06229972839 -44.27768127617,112.35819816589 -44.309136146459,112.35819816589 -10.748355247628,112.13847160339 -10.877850325879,112.27030754089 -10.661994277738))",
qa = "none"
)$data)
machine_bees %>%
count(scientificName) %>%
arrange(desc(n))
machine_obs %>%
filter(scientificName == "Amegilla (Zonamegilla) pulchra")
machine_bees %>%
count(genus)
library(leaflet)
leaflet(machine_bees) %>%
addTiles() %>%
addCircleMarkers(lng = ~ longitude, lat = ~ latitude, color = ~ colorFactor("RdYlBu", domain = NULL)(genus))
leaflet(machine_bees %>% filter(!(genus%in%c("Ctenoplectra","Nomada", "")))) %>%
addTiles() %>%
addCircleMarkers(lng = ~ longitude, lat = ~ latitude, color = ~ colorFactor("RdYlBu", domain = NULL)(genus))
leaflet(machine_bees %>% filter(!(genus%in%c("Ctenoplectra","Nomada", "")))) %>%
addTiles() %>%
addCircleMarkers(lng = ~ longitude, lat = ~ latitude, color = ~ colorFactor("RdYlBu", domain = NULL)(genus)) %>%
addLegend()
leaflet(machine_bees %>% filter(!(genus%in%c("Ctenoplectra","Nomada", "")))) %>%
addTiles() %>%
addCircleMarkers(lng = ~ longitude, lat = ~ latitude, color = ~ pal(genus)) %>%
addLegend(pal = pal, values = ~ genus)
pal <- colorFactor("RdYlBu", domain = NULL)
leaflet(machine_bees %>% filter(!(genus%in%c("Ctenoplectra","Nomada", "")))) %>%
addTiles() %>%
addCircleMarkers(lng = ~ longitude, lat = ~ latitude, color = ~ pal(genus)) %>%
addLegend(pal = pal, values = ~ genus)
pal <- colorFactor("Dark2", domain = NULL)
leaflet(machine_bees %>% filter(!(genus%in%c("Ctenoplectra","Nomada", "")))) %>%
addTiles() %>%
addCircleMarkers(lng = ~ longitude, lat = ~ latitude, color = ~ pal(genus)) %>%
addLegend(pal = pal, values = ~ genus)
pryr::object_size(machine_bees)
sunflower_obs <- as_tibble(occurrences(
fq = c("species:Helianthus annuus"),
wkt = "POLYGON((112.27030754089 -10.661994277738, 153.88651847839 -10.445985021005,154.06229972839 -44.27768127617,112.35819816589 -44.309136146459,112.35819816589 -10.748355247628,112.13847160339 -10.877850325879,112.27030754089 -10.661994277738))",
qa = "none"
)$data)
sunflower_obs
bee <- as_tibble(search_fulltext("Sunflower")$data)
bee
bee$species
bee$commonName
bee$family
sunflower_obs <- as_tibble(occurrences(
fq = c("family:Asteraceae"),
wkt = "POLYGON((112.27030754089 -10.661994277738, 153.88651847839 -10.445985021005,154.06229972839 -44.27768127617,112.35819816589 -44.309136146459,112.35819816589 -10.748355247628,112.13847160339 -10.877850325879,112.27030754089 -10.661994277738))",
qa = "none"
)$data)
sunflower_obs %>%
sunflower_obs %>% count(phylum)
sunflower_obs %>% count(species)
sunflower_obs %>% count(species) %>% arrange(desc(n))
bee_obs
bee_obs <- machine_bees
bee_obs
bee_obs$minimumElevationInMetres
bee_obs
bee_obs %>% count(month)
bee_obs %>% count(month) %>% ggplot(aes(x=month, y=n)) + geom_col()
bee_obs %>% count(month, state)
bee_obs %>% count(month, state)  %>% ggplot(aes(x=month, y=n)) + geom_col() + facet_wrap(state)
bee_obs %>% count(month, state)  %>% ggplot(aes(x=month, y=n)) + geom_col() + facet_wrap(~state)
bee_obs %>% count(month, genus)  %>% ggplot(aes(x=month, y=n)) + geom_col() + facet_wrap(~genus)
bee_obs %>% count(month, state)  %>% ggplot(aes(x=month, y=n)) + geom_col() + facet_wrap(~ state)
# Hmm, interesting. Seasonal effect!
bee_obs %>% filter(species != "Apis") %>% count(month, state)  %>% ggplot(aes(x=month, y=n)) + geom_col() + facet_wrap(~ state)
bee_obs %>%
count(genus)
# Hmm, interesting. Seasonal effect!
bee_obs %>% filter(genus != "Apis") %>% count(month, state)  %>% ggplot(aes(x=month, y=n)) + geom_col() + facet_wrap(~ state)
# Hmm, interesting. Seasonal effect for Aussie (?) bees!
bee_obs %>% filter(genus != "Apis") %>% count(year, state)  %>% ggplot(aes(x=year, y=n)) + geom_col() + facet_wrap(~ state)
bee_obs$year %>% is.na %>% mean
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
input$map_bounds
input$map_center
runApp('shiny')
ALA4R::ala_fields("assertions",as_is=TRUE)
ALA4R::ala_fields("assertions",as_is=TRUE) %>% View
library(ALA4R)
library(tidyverse)
library(lubridate)
# cache to a permanent dir
ala_config(
cache_directory = "data_cache",
download_reason_id = 11, # "citizen science"
warn_on_empty = TRUE
)
bee <- as_tibble(search_fulltext("Sunflo")$data)
# sunflower_obs <- as_tibble(occurrences(
#   fq = c("family:Asteraceae"),
#   wkt = "POLYGON((112.27030754089 -10.661994277738, 153.88651847839 -10.445985021005,154.06229972839 -44.27768127617,112.35819816589 -44.309136146459,112.35819816589 -10.748355247628,112.13847160339 -10.877850325879,112.27030754089 -10.661994277738))",
#   qa = "none"
# )$data)
bee_obs <- as_tibble(occurrences(
fq = c("family:Apidae"),
wkt = "POLYGON((112.27030754089 -10.661994277738, 153.88651847839 -10.445985021005,154.06229972839 -44.27768127617,112.35819816589 -44.309136146459,112.35819816589 -10.748355247628,112.13847160339 -10.877850325879,112.27030754089 -10.661994277738))",
qa = "none"
)$data)
bee_obs_all <- as_tibble(occurrences(
fq = c("family:Apidae"),
wkt = "POLYGON((112.27030754089 -10.661994277738, 153.88651847839 -10.445985021005,154.06229972839 -44.27768127617,112.35819816589 -44.309136146459,112.35819816589 -10.748355247628,112.13847160339 -10.877850325879,112.27030754089 -10.661994277738))",
qa = "all"
)$data)
View(bee_obs_all)
bee_obs_all %>% filter(locationQuality)
bee_obs_all %>% filter(locationQuality, temporalIssue)
runApp('shiny')
bee_obs <- as_tibble(occurrences(
fq = c("family:Apidae"),
wkt = "POLYGON((112.27030754089 -10.661994277738, 153.88651847839 -10.445985021005,154.06229972839 -44.27768127617,112.35819816589 -44.309136146459,112.35819816589 -10.748355247628,112.13847160339 -10.877850325879,112.27030754089 -10.661994277738))",
qa = "locationQuality"
)$data)
bee_obs$locationQuality
runApp('shiny')
runApp('shiny')
runApp('shiny')
input$in_genus
?sliderInput
?selectInput
runApp('shiny')
shiny::runApp('shiny')
runApp('shiny')
?box
runApp('shiny')
runApp('shiny')
?box
runApp('shiny')
shiny::runApp('shiny')
runApp('shiny')
runApp('shiny')
length(times)
i
runApp('shiny')
Q
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
i
genus
zoom
delay
step
stretch
info
times
position
genus
info
demo_anim(times[i], max(times[[i+1]]), info[[i]], genus[[i]], position[[i]], zoom[[i]], delay[[i]], step[[i]], stretch[[i]])
Q
runApp('shiny')
genus
delay
start_time
end_time
end_time[[1]]
anim_range[2]
delay
step
new_range
runApp('shiny')
runApp('shiny')
anim_range
delay
runApp('shiny')
anim_range
end_time
delay
anim_range
anim_range
runApp('shiny')
traceback()
runApp('shiny')
runApp('shiny')
f
info[[i]]
i
times
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
animationOptions
sliderInput
runApp('shiny')
runApp('shiny')
shiny::runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
shiny::runApp('shiny')
